// Hi·ªáu ·ª©ng tuy·∫øt r∆°i v·ªõi particles.js
particlesJS("snowfall", {
  particles: {
    number: { value: 80 }, // S·ªë l∆∞·ª£ng b√¥ng tuy·∫øt
    shape: {
      type: "image",
      image: {
        src: "image/snowflake.png", // ƒê∆∞·ªùng d·∫´n h√¨nh b√¥ng tuy·∫øt
        width: 20,
        height: 20
      }
    },
    opacity: { value: 0.8, random: true }, // ƒê·ªô m·ªù c·ªßa b√¥ng tuy·∫øt
    size: { value: 15, random: true }, // K√≠ch th∆∞·ªõc b√¥ng tuy·∫øt
    move: { speed: 2, direction: "bottom", out_mode: "out" }, // Hi·ªáu ·ª©ng r∆°i
    line_linked: { // T·∫Øt c√°c ƒë∆∞·ªùng n·ªëi gi·ªØa c√°c h·∫°t
      enable: false
    }
  }
});




// Hi·ªÉn th·ªã thi·ªáp v√† ·∫©n n√∫t
function showCard() {
  const card = document.getElementById("card");
  const button = document.getElementById("show-wish-btn");
  const treeContainer = document.getElementById("tree-container");
  card.classList.remove("hidden");
  card.classList.add("animate__fadeIn");
  button.style.display = "none"; // ·∫®n n√∫t
  treeContainer.style.display = "none"; // ·∫®n c√¢y th√¥ng
}

// ƒê√≥ng thi·ªáp
function closeCard() {
  const card = document.getElementById("card");
  card.classList.add("hidden"); // ·∫®n thi·ªáp khi ƒë√≥ng
  const button = document.getElementById("show-wish-btn");
  const treeContainer = document.getElementById("tree-container");
  button.style.display = "inline-block"; // Hi·ªÉn th·ªã l·∫°i n√∫t ch√∫c m·ª´ng
  treeContainer.style.display = "block"; // Hi·ªÉn th·ªã l·∫°i c√¢y th√¥ng

}

// Ph√°t ho·∫∑c d·ª´ng nh·∫°c
let isPlaying = false;
const bgMusic = document.getElementById("bg-music");
const musicBtn = document.getElementById("music-btn");

function toggleMusic() {
  if (isPlaying) {
    bgMusic.pause();
    musicBtn.textContent = "üé∂ Ph√°t nh·∫°c";
  } else {
    bgMusic.play();
    musicBtn.textContent = "‚è∏Ô∏è D·ª´ng nh·∫°c";
  }
  isPlaying = !isPlaying;
}

function generateTrees() {
  const treeContainer = document.getElementById('tree-container');
  treeContainer.innerHTML = ''; // X√≥a c√¢y c≈© n·∫øu c√≥
  
  const screenWidth = window.innerWidth - 70; // Ch·ª´a 150px b√™n ph·∫£i
  const treeWidth = 80;
  const spacing = 0;
  const totalSlots = Math.floor(screenWidth / (treeWidth + spacing));

  for (let i = 0; i < totalSlots; i++) {
    const leftPosition = i * (treeWidth + spacing);

    const tree = document.createElement('div');
    tree.classList.add('tree');
    tree.style.left = `${leftPosition}px`;
    treeContainer.appendChild(tree);
  }
}

window.onload = generateTrees;

