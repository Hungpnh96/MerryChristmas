// Hi·ªáu ·ª©ng tuy·∫øt r∆°i v·ªõi particles.js
particlesJS("snowfall", {
  particles: {
    number: { value: 80 }, // S·ªë l∆∞·ª£ng b√¥ng tuy·∫øt
    shape: {
      type: "image",
      image: {
        src: "image/snowflake.png", // ƒê∆∞·ªùng d·∫´n h√¨nh b√¥ng tuy·∫øt
        width: 20,
        height: 20
      }
    },
    opacity: { value: 0.8, random: true }, // ƒê·ªô m·ªù c·ªßa b√¥ng tuy·∫øt
    size: { value: 15, random: true }, // K√≠ch th∆∞·ªõc b√¥ng tuy·∫øt
    move: { speed: 2, direction: "bottom", out_mode: "out" }, // Hi·ªáu ·ª©ng r∆°i
    line_linked: { // T·∫Øt c√°c ƒë∆∞·ªùng n·ªëi gi·ªØa c√°c h·∫°t
      enable: false
    }
  }
});




// Hi·ªÉn th·ªã thi·ªáp v√† ·∫©n n√∫t
function showCard() {
  const card = document.getElementById("card");
  const button = document.getElementById("show-wish-btn");
  const treeContainer = document.getElementById("tree-container");
  card.classList.remove("hidden");
  card.classList.add("animate__fadeIn");
  button.style.display = "none"; // ·∫®n n√∫t
  treeContainer.style.display = "none"; // ·∫®n c√¢y th√¥ng
}

// ƒê√≥ng thi·ªáp
function closeCard() {
  const card = document.getElementById("card");
  card.classList.add("hidden"); // ·∫®n thi·ªáp khi ƒë√≥ng
  const button = document.getElementById("show-wish-btn");
  const treeContainer = document.getElementById("tree-container");
  button.style.display = "inline-block"; // Hi·ªÉn th·ªã l·∫°i n√∫t ch√∫c m·ª´ng
  treeContainer.style.display = "block"; // Hi·ªÉn th·ªã l·∫°i c√¢y th√¥ng

}

// Ph√°t ho·∫∑c d·ª´ng nh·∫°c
let isPlaying = false;
const bgMusic = document.getElementById("bg-music");
const musicBtn = document.getElementById("music-btn");

function toggleMusic() {
  if (isPlaying) {
    bgMusic.pause();
    musicBtn.textContent = "üé∂ Ph√°t nh·∫°c";
  } else {
    bgMusic.play();
    musicBtn.textContent = "‚è∏Ô∏è D·ª´ng nh·∫°c";
  }
  isPlaying = !isPlaying;
}

function generateTrees() {
  const treeContainer = document.getElementById('tree-container');
  treeContainer.innerHTML = ''; // X√≥a c√¢y c≈© n·∫øu c√≥
  
  const screenWidth = window.innerWidth - 70; // Ch·ª´a 150px b√™n ph·∫£i
  const treeWidth = 80;
  const spacing = 0;
  const totalSlots = Math.floor(screenWidth / (treeWidth + spacing));

  for (let i = 0; i < totalSlots; i++) {
    const leftPosition = i * (treeWidth + spacing);

    const tree = document.createElement('div');
    tree.classList.add('tree');
    tree.style.left = `${leftPosition}px`;
    treeContainer.appendChild(tree);
  }
}


let screenWidth = window.innerWidth;  // L·∫•y chi·ªÅu r·ªông m√†n h√¨nh
let screenHeight = window.innerHeight;  // L·∫•y chi·ªÅu cao m√†n h√¨nh

function updateCardSize() {
  let card = document.getElementById('card');
  
  // L·∫•y k√≠ch th∆∞·ªõc m√†n h√¨nh
  let screenWidth = window.innerWidth;
  let screenHeight = window.innerHeight;

  // V√≠ d·ª•: Chi·ªÅu r·ªông th·∫ª card s·∫Ω l√† 80% chi·ªÅu r·ªông m√†n h√¨nh
  let cardWidth = screenWidth * 0.9;  
  // Chi·ªÅu cao th·∫ª card s·∫Ω l√† 70% chi·ªÅu cao m√†n h√¨nh
  let cardHeight = screenHeight * 0.9;

  // ƒê·∫∑t chi·ªÅu r·ªông v√† chi·ªÅu cao cho th·∫ª card
  card.style.width = `${cardWidth}px`;
  card.style.height = `${cardHeight}px`;
	if (screenWidth <= 600) {
		card.style.marginBottom = `${(screenHeight * 0.15)}px`;  // 15% of window width
	}
}

// G·ªçi h√†m khi t·∫£i trang v√† khi thay ƒë·ªïi k√≠ch th∆∞·ªõc m√†n h√¨nh
window.onload = updateCardSize;
window.onresize = updateCardSize;
window.onload = generateTrees;

function adjustCardStyle() {
  const card = document.querySelector('.card');
  const title = document.querySelector('.title');
  const message = document.querySelector('.message');
  const closeBtn = document.querySelector('.close-btn');
  const title1 = document.querySelector('.title-1');
  const screenWidth = window.innerWidth;

  // ƒêi·ªÅu ch·ªânh cho m√†n h√¨nh nh·ªè (d∆∞·ªõi 600px)
  if (screenWidth <= 600) {
    card.style.maxHeight = '80vh';  // Gi·∫£m chi·ªÅu cao t·ªëi ƒëa c·ªßa card
    title.style.fontSize = '1rem';  // C·ª° ch·ªØ c·ªßa title
    title1.style.fontSize = '1rem';  // C·ª° ch·ªØ c·ªßa title
    message.style.fontSize = '1rem';  // C·ª° ch·ªØ c·ªßa message
    closeBtn.style.fontSize = '0.8rem';  // C·ª° ch·ªØ c·ªßa n√∫t ƒë√≥ng
	card.style.marginBottom = `${(screenHeight * 0.15)}px`;  // 15% of window width	
  } else {
    // ƒêi·ªÅu ch·ªânh cho m√†n h√¨nh l·ªõn h∆°n 600px
    card.style.maxHeight = '85vh';  // Chi·ªÅu cao t·ªëi ƒëa c·ªßa card
    title.style.fontSize = '2rem';  // C·ª° ch·ªØ c·ªßa title
    title1.style.fontSize = '2rem';  // C·ª° ch·ªØ c·ªßa title
    message.style.fontSize = '1.8rem';  // C·ª° ch·ªØ c·ªßa message
    closeBtn.style.fontSize = '1.5rem';  // C·ª° ch·ªØ c·ªßa n√∫t ƒë√≥ng
  }
}

// G·ªçi h√†m ƒëi·ªÅu ch·ªânh khi trang ƒë∆∞·ª£c t·∫£i ho·∫∑c khi k√≠ch th∆∞·ªõc c·ª≠a s·ªï thay ƒë·ªïi
window.addEventListener('resize', adjustCardStyle);
window.onload = generateTrees;

// G·ªçi m·ªôt l·∫ßn khi trang v·ª´a ƒë∆∞·ª£c t·∫£i
adjustCardStyle();
window.onload = generateTrees;


//##########

// // L·∫•y ph·∫ßn t·ª≠ h√¨nh ·∫£nh v√† modal
// const img = document.getElementById('cardImage');
// const modal = document.getElementById('modal');
// const modalImg = document.getElementById('modalImage');
// const captionText = document.getElementById('caption');
// const closeBtn = document.getElementsByClassName('close')[0];

// // Khi ng∆∞·ªùi d√πng nh·∫•p v√†o ·∫£nh, m·ªü modal v√† hi·ªÉn th·ªã ·∫£nh ph√≥ng to
// img.onclick = function() {
  // modal.style.display = 'block';
  // modalImg.src = this.src;  // L·∫•y src c·ªßa ·∫£nh v√† g√°n v√†o modal
  // captionText.innerHTML = this.alt;  // L·∫•y alt c·ªßa ·∫£nh v√† hi·ªÉn th·ªã d∆∞·ªõi ·∫£nh ph√≥ng to
// }

// // Khi ng∆∞·ªùi d√πng nh·∫•p v√†o n√∫t ƒë√≥ng, ƒë√≥ng modal
// closeBtn.onclick = function() {
  // modal.style.display = 'none';
// }

// // Khi ng∆∞·ªùi d√πng nh·∫•p ra ngo√†i ·∫£nh, ƒë√≥ng modal
// modal.onclick = function(event) {
  // if (event.target == modal) {
    // modal.style.display = 'none';
  // }
// }

// // L·∫•y ph·∫ßn t·ª≠ c·∫ßn cƒÉn gi·ªØa
// const modalContent = document.querySelector('.modal-content');

// // C·∫≠p nh·∫≠t v·ªã tr√≠ c·ªßa modal-content khi modal ƒë∆∞·ª£c hi·ªÉn th·ªã
// function centerModal() {
  // // L·∫•y chi·ªÅu cao v√† chi·ªÅu r·ªông c·ªßa modal-content
  // const modalContentHeight = modalContent.offsetHeight;
  // const modalContentWidth = modalContent.offsetWidth;

  // // L·∫•y chi·ªÅu cao v√† chi·ªÅu r·ªông c·ªßa c·ª≠a s·ªï tr√¨nh duy·ªát
  // const windowHeight = window.innerHeight;
  // const windowWidth = window.innerWidth;

  // // CƒÉn gi·ªØa modal-content theo c·∫£ chi·ªÅu ngang v√† chi·ªÅu d·ªçc
  // modalContent.style.position = 'absolute';
  // modalContent.style.top = `${(windowHeight - modalContentHeight) / 2}px`;
  // modalContent.style.left = `${(windowWidth - modalContentWidth) / 2}px`;
// }

// // Khi modal ƒë∆∞·ª£c m·ªü, g·ªçi h√†m ƒë·ªÉ cƒÉn gi·ªØa
// img.onclick = function() {
  // modal.style.display = 'block';
  // modalImg.src = this.src;  // L·∫•y src c·ªßa ·∫£nh v√† g√°n v√†o modal
  // captionText.innerHTML = this.alt;  // L·∫•y alt c·ªßa ·∫£nh v√† hi·ªÉn th·ªã d∆∞·ªõi ·∫£nh ph√≥ng to
  // centerModal();  // CƒÉn gi·ªØa modal-content
// }

// // Khi ng∆∞·ªùi d√πng thay ƒë·ªïi k√≠ch th∆∞·ªõc c·ª≠a s·ªï, g·ªçi l·∫°i h√†m cƒÉn gi·ªØa
// window.addEventListener('resize', centerModal);


//##########
// L·∫•y ph·∫ßn t·ª≠ h√¨nh ·∫£nh v√† modal
const img = document.getElementById('cardImage');
const modal = document.getElementById('modal');
const modalImg = document.getElementById('modalImage');
const captionText = document.getElementById('caption');
const closeBtn = document.getElementsByClassName('close')[0];

// Khi ng∆∞·ªùi d√πng nh·∫•p v√†o ·∫£nh, m·ªü modal v√† hi·ªÉn th·ªã ·∫£nh ph√≥ng to
img.onclick = function() {
  modal.style.display = 'block';
  modalImg.src = this.src;  // L·∫•y src c·ªßa ·∫£nh v√† g√°n v√†o modal
  captionText.innerHTML = this.alt;  // L·∫•y alt c·ªßa ·∫£nh v√† hi·ªÉn th·ªã d∆∞·ªõi ·∫£nh ph√≥ng to
  centerModal();  // CƒÉn gi·ªØa modal-content v√† thay ƒë·ªïi k√≠ch th∆∞·ªõc
}

// Khi ng∆∞·ªùi d√πng nh·∫•p v√†o n√∫t ƒë√≥ng, ƒë√≥ng modal
closeBtn.onclick = function() {
  modal.style.display = 'none';
}

// Khi ng∆∞·ªùi d√πng nh·∫•p ra ngo√†i ·∫£nh, ƒë√≥ng modal
modal.onclick = function(event) {
  if (event.target == modal) {
    modal.style.display = 'none';
  }
}

// L·∫•y ph·∫ßn t·ª≠ c·∫ßn cƒÉn gi·ªØa
const modalContent = document.querySelector('.modal-content');

// C·∫≠p nh·∫≠t v·ªã tr√≠ c·ªßa modal-content khi modal ƒë∆∞·ª£c hi·ªÉn th·ªã
function centerModal() {
  // L·∫•y chi·ªÅu cao v√† chi·ªÅu r·ªông c·ªßa modal-content
  const modalContentHeight = modalContent.offsetHeight;
  const modalContentWidth = modalContent.offsetWidth;

  // L·∫•y chi·ªÅu cao v√† chi·ªÅu r·ªông c·ªßa c·ª≠a s·ªï tr√¨nh duy·ªát
  const windowHeight = window.innerHeight;
  const windowWidth = window.innerWidth;

 // CƒÉn gi·ªØa modal-content theo c·∫£ chi·ªÅu ngang v√† chi·ªÅu d·ªçc
  modalContent.style.position = 'absolute';

  // N·∫øu m√†n h√¨nh l·ªõn h∆°n 600px, thay ƒë·ªïi k√≠ch th∆∞·ªõc ·∫£nh v√† cƒÉn gi·ªØa
  if (windowWidth > 600) {
    // TƒÉng k√≠ch th∆∞·ªõc ·∫£nh n·∫øu m√†n h√¨nh l·ªõn
    modalImg.style.width = "80%"; // Ph√≥ng to ·∫£nh
    modalImg.style.height = "auto"; // Gi·ªØ t·ªâ l·ªá ·∫£nh
    modalContent.style.right = "0px"; //`${(windowWidth) + }px`;
	 modalContent.style.left = "0px"; //`${(windowWidth) + }px`;
	 modalContent.style.top = "0px"; //`${(windowWidth) + }px`;

  } else {
    // Kh√¥ng thay ƒë·ªïi k√≠ch th∆∞·ªõc ·∫£nh cho m√†n h√¨nh nh·ªè
    modalImg.style.width = "100%"; // ƒê·ªÉ ·∫£nh v·ª´a v·ªõi m√†n h√¨nh nh·ªè
    modalImg.style.height = "auto"; // Gi·ªØ t·ªâ l·ªá ·∫£nh
	 modalContent.style.top = `${(windowHeight - modalContentHeight) / 2}px`;
    // modalContent.style.left = `${(windowWidth - modalContentWidth) / 2}px`;
     modalContent.style.right = "0px"; //`${(windowWidth) + }px`;
	 modalContent.style.left = "0px"; //`${(windowWidth) + }px`;
  }

 
 
}

// Khi ng∆∞·ªùi d√πng thay ƒë·ªïi k√≠ch th∆∞·ªõc c·ª≠a s·ªï, g·ªçi l·∫°i h√†m cƒÉn gi·ªØa
window.addEventListener('resize', centerModal);
window.onload = generateTrees;
